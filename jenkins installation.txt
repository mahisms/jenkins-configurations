jenkins Installation:
==================================================================
Install java and set path:
  yum install java-1.8* -y
   export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161.b14
   PATH=$PATH:$JAVA_HOME
3. Download jenkins on to EC2 instance
   sudo wget -0 //etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat/jenkins.repo
   rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key
 --> Referance Link: https://pkg.jenkins.io/redhat/
4. Intsall jenkins
    yum install jenkins -y
5. Start jenkins service
   servic jenkins start
6. Check java and jenkins version
   java -version
7. 


  code: https://github.com/ValaxyTech/hello-world
Creating CI and Cd:
===============================================================
 code: https://github.com/ValaxyTech/hello-world
Install maven plugin in  jenkins server.
 Cretae a job --> Maven Job--> paste the git repository project url--> (in the build option)golas: clean install package--> apply and ok-->

  --> build the job.

====> abpove steps are for CI.
---->TO deploy war  or jar file in to app server.
  --> First we need to install deploy and container plugin.
   manage jenkins--> manage plugins--> install deploy and container plugin without restart.
   user name: deployer
   password: deployer
   ID: TOMCAT_Credentials
   Description: TOMCAT_Credentials--> OK 

(Note: If we have private git repo, then also we need to add the github credentials as above.)
-->After installing plugn we need to set the credentials.
  On jenkins console --> credentials->click on jenkins--> global credentials-->add credentials--> here we can add tomcat server's credentials.
  In tomcat server we ned to add user credentials in tomcat.user.xml file.
===>   vi tomcat.user.xml
<role rolename="manager-gui"/>
<role rolename="manager-script"/>
<role rolename="manager-jmx"/>
<role rolename="manager-status"/> 
<user username="admin" password="admin123" roles="manager-gui, managr-script, manager-jmx, manager-status"/>
<user usrname="deployer" password="deployer" roles="manager-script"/>

<user username="tomcat" password="secret" roles="manager-gui"/>

<!--
<role rolename="tomcat"/>
<role rolename="role1"/>
<user username="tomcat" password="  
-->
</tomcat-users>

==>In the same project configure
     in post Build-actions select deploy war/jar to a container option
      --> war file: specify the path of war file or(**/*.war)
      --> context Path: full name of war file or ignore
    --> container : tomcat8
   -->   credentials: select the tomcat credentials
    --> tomcat url: 192.168.13.25:8080/
apply and save..
   --> build it.

 
     

==> As above we need to update tomcat-users.xml file.


  
    






root      4510     1  0 11:54 pts/0    00:00:00 /bin/sh /root/apache-tomcat-8.5.38/bin/catalina.sh start
root      4511  4510  1 11:54 pts/0    00:00:02 /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-1.el7_6.x86_64/bin/java -Djava.util.logging.config.file=/root/apache-tomcat-8.5.38/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /root/apache-tomcat-8.5.38/bin/bootstrap.jar:/root/apache-tomcat-8.5.38/bin/tomcat-juli.jar -Dcatalina.base=/root/apache-tomcat-8.5.38 -Dcatalina.home=/root/apache-tomcat-8.5.38 -Djava.io.tmpdir=/root/apache-tomcat-8.5.38/temp org.apache.catalina.startup.Bootstrap start
